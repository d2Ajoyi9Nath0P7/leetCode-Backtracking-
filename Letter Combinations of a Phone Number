void solve(int index,string& digits,unordered_map<int,string>&mp,vector<string>&res,string& temp)
    {
        if(index == digits.size())
        {
            res.push_back(temp);
            return;
        }

        char digit = digits[index];
        string str = mp[digit-'0'];//abc def

        for(char letter : str)//a b c
        {
            temp.push_back(letter);
            solve(index+1,digits,mp,res,temp);
            temp.pop_back();
        }
    }

    vector<string> letterCombinations(string digits)
    {
        if(digits.empty())
        {
            return {};
        }
        unordered_map<int,string>mp;
        mp[2] = "abc";
        mp[3] = "def";
        mp[4] = "ghi";
        mp[5] = "jkl";
        mp[6] = "mno";
        mp[7] = "pqrs";
        mp[8] = "tuv";
        mp[9] = "wxyz";
        vector<string>res;
        string temp = ""; 
        solve(0,digits,mp,res,temp);
        return res;
    }
