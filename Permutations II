void solve(vector<int>&nums,vector<int>&temp,vector<vector<int>>&res,vector<int>&vis)
    {
        if(temp.size() == nums.size())
        {
            res.push_back(temp);
            return;
        }

        for(int i = 0; i < nums.size() ; i++)
        {
            if(vis[i])
            {
                continue;
            }
            if(i > 0 && nums[i] == nums[i-1] && !vis[i-1])
            {
                continue;
            }

            vis[i] = true;
            temp.push_back(nums[i]);
            solve(nums,temp,res,vis);

            vis[i] = false;
            temp.pop_back();
        }
    }

    vector<vector<int>> permuteUnique(vector<int>& nums) 
    {
        int n = nums.size();
        vector<vector<int>>res;
        vector<int>temp;
        vector<int>vis(n,0);
        sort(nums.begin(),nums.end());
        solve(nums,temp,res,vis);
        
        return res;
    }
