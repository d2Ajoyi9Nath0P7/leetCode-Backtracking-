void findCombination(vector<int>& candidates,int target,int index,vector<int>&ds,vector<vector<int>>&ans)
    {
        if(index == candidates.size())
        {
            if(target == 0)
            {
                ans.push_back(ds);
            }
            return;
        }
        if(target >= candidates[index])
        {
            ds.push_back(candidates[index]);
            findCombination(candidates,target - candidates[index],index,ds,ans);
            ds.pop_back();
        }
        findCombination(candidates,target,index + 1,ds,ans);
    }

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int>ds;
        vector<vector<int>>ans;
        findCombination(candidates,target,0,ds,ans);

        return ans;
    }
